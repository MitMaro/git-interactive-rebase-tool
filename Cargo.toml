[package]
name = "git-interactive-rebase-tool"
version = "2.3.0"
authors = ["Tim Oram <dev@mitmaro.ca>"]
license = "GPL-3.0-or-later"
description = "Full feature terminal based sequence editor for git interactive rebase."
homepage = "https://gitrebasetool.mitmaro.ca/"
repository = "https://github.com/MitMaro/git-interactive-rebase-tool"
keywords = ["git", "editor", "tool", "rebase", "cli"]
categories = ["command-line-interface", "command-line-utilities", "text-editors"]
readme = "README.md"
include = [
    "**/*.rs",
    "/Cargo.toml",
    "/CHANGELOG.md",
    "/LICENSE",
    "/readme",
    "/README.md"
]
edition = "2021"

[[bin]]
name = "interactive-rebase-tool"
path = "src/main.rs"

[dependencies]
anyhow = "1.0.72"
bitflags = "2.4.2"
captur = "0.1.0"
chrono = "0.4.26"
crossbeam-channel = "0.5.8"
crossterm = "0.27.0"
git2 = { version = "0.18.2", default-features = false, features = [] }
if_chain = "1.0.2"
lazy_static = "1.4.0"
num-format = "0.4.4"
parking_lot = "0.12.1"
pico-args = "0.5.0"
thiserror = "1.0.56"
unicode-segmentation = "1.10.1"
unicode-width = "0.1.10"
uuid = { version = "1.4.1", features = ["v4", "fast-rng"] }
version-track = "0.1.0"
xi-unicode = "0.3.0"

[target.'cfg(target_os = "macos")'.dependencies]
crossterm = { version = "0.27.0", features = ["use-dev-tty"] }

[dev-dependencies]
claims = "0.7.1"
itertools = "0.12.1"
pretty_assertions = "1.4.0"
regex = "1.8.3"
rstest = "0.18.1"
serial_test = "3.0.0"
tempfile = "3.7.0"

[build-dependencies]
chrono = "0.4.26"
rustc_version = "0.4.0"

[features]
default = []
dev = []

[profile.release]
incremental = true
debug = 0
lto = true
codegen-units = 1

[package.metadata.deb]
license-file = ["LICENSE"]
extended-description = """\
Full feature terminal based sequence editor for git interactive rebase."""
section = "utility"
priority = "optional"
assets = [
    ["target/release/interactive-rebase-tool", "usr/bin/interactive-rebase-tool", "755"],
    ["README.md", "usr/share/doc/interactive-rebase-tool/", "644"],
    ["readme/**/*.md", "usr/share/doc/interactive-rebase-tool/readme/", "644"],
    ["CHANGELOG.md", "usr/share/doc/interactive-rebase-tool/", "644"],
    ["src/interactive-rebase-tool.1", "usr/share/man/man1/interactive-rebase-tool.1", "644"]
]

[lints.rust]
future_incompatible = { level = "warn", priority = -2 }
keyword_idents = { level = "warn", priority = -3 }
let_underscore = { level = "warn", priority = -2 }
nonstandard_style = { level = "warn", priority = -2 }
# refiing_impl_trait - Not needed for this project
rust_2018_compatibility = { level = "warn", priority = -2 }
rust_2018_idioms = { level = "warn", priority = -2 }
rust_2021_compatibility = { level = "warn", priority = -2 }
rust_2024_compatibility = { level = "warn", priority = -2 }
unused = { level = "warn", priority = -2 }

unknown_lints = { level = "warn", priority = -1 }
renamed_and_removed_lints = { level = "warn", priority = -1 }

# Allow certain configs in the check-cfg linting
unexpected_cfgs = { level = "warn", check-cfg = ["cfg(tarpaulin_include)"] }

# absolute_paths_not_starting_with_crate - group rust_2018_compatibility
# box-pointers - used in project, and is safe to do so
deprecated_in_future = "warn"
# elided_lifetimes_in_paths - group: rust_2018_idioms
# explicit_outlives_requirements - group: rust_2018_idioms
ffi_unwind_calls = "warn"
# fuzzy_provenance_casts - unstable
# impl_trait_overcaptures - unstable
# keyword_idents_2018 - group: rust_2018_compatibility
# keyword_idents_2024 - group: rust_2024_compatibility
# let_underscore_drop - group: let_underscore
# lossy_provenance_casts - unstable
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
# missing_docs - not requiring docs in this project
# multiple_supertrait_upcastable - unstable
# must_not_suspend - unstable
non_ascii_idents = "warn"
# non_exhaustive_omitted_patterns - unstable
redundant_lifetimes = "warn"
# rust_2021_incompatible_closure_captures - group: rust_2021_compatibility
# rust_2021_incompatible_or_patterns - group: rust_2021_compatibility
# rust_2021_prefixes_incompatible_syntax - group: rust_2021_compatibility
# rust_2021_prelude_collisions - group: rust_2021_compatibility
# rust_2024_incompatible_pat - unstable
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unit-bindings = "warn"
unnameable_types = "warn"
unreachable_pub = "warn"
unsafe_code = "warn"
# unsafe_op_in_unsafe_fn - group: rust_2024_compatibility
# unstable_features - deprecated
unused_crate_dependencies = "warn"
# unused_extern_crates - group: unused, rust_2018_idioms
unused_import_braces = "warn"
unused_lifetimes = "warn"
# unused_macro_rules - group: unused
unused_qualifications = "warn"
unused_results = "warn"
variant_size_differences = "warn"

[lints.clippy]
all = { level = "warn", priority = -2 }
cargo = { level = "warn", priority = -2 }
pedantic = { level = "warn", priority = -2 }
restriction = { level = "warn", priority = -2 }

# Clippy restricts enabling restricted lints
blanket_clippy_restriction_lints = { level = "allow", priority = 5 }

absolute_paths = "allow"
as_conversions = "allow"
arithmetic_side_effects = "allow"
bool_to_int_with_if = "allow"
default_numeric_fallback = "allow"
else_if_without_else = "allow"
expect_used = "allow"
float_arithmetic = "allow"
implicit_return = "allow"
indexing_slicing = "allow"
integer_division_remainder_used = "allow"
map_err_ignore = "allow"
min_ident_chars = "allow"
missing_docs_in_private_items = "allow"
missing_trait_methods = "allow"
module_name_repetitions = "allow"
needless_raw_string_hashes = "allow"
needless_raw_strings = "allow"
new_without_default = "allow"
non_ascii_literal = "allow"
option_if_let_else = "allow"
pattern_type_mismatch = "allow"
pub_use = "allow"
pub_with_shorthand = "allow"
question_mark_used = "allow"
redundant_closure_call = "allow"
redundant_closure_for_method_calls = "allow"
redundant_pub_crate = "allow"
ref_patterns = "allow"
self_named_module_files = "allow"
single_call_fn = "allow"
std_instead_of_alloc = "allow"
std_instead_of_core = "allow"
tabs_in_doc_comments = "allow"
tests_outside_test_module = "allow"
too_many_lines = "allow"
unwrap_used = "allow"
wildcard_enum_match_arm = "allow"

[lints.rustdoc]
bare_urls = "warn"
broken_intra_doc_links = "warn"
invalid_codeblock_attributes = "warn"
invalid_html_tags = "warn"
missing_crate_level_docs = "allow"
private_doc_tests = "warn"
private_intra_doc_links = "warn"
