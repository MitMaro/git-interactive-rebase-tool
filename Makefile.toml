[env]
RUST_NIGHTLY_VERSION_PREFIX = ""

[config]
skip_core_tasks = true
default_to_workspace = false

[tasks.dev]
dependencies = [
    "build",
    "build-nightly",
    "test",
    "docs",
    "lint",
    "format",
]

[tasks.build]
dependencies = ["update-rust-stable"]
toolchain = "stable"
install_crate = false
command = "cargo"
args = ["build", "${@}"]

[tasks.build-nightly]
dependencies = ["update-rust-nightly"]
toolchain = "nightly${RUST_NIGHTLY_VERSION_PREFIX}"
install_crate = false
command = "cargo"
args = ["build", "${@}"]

[tasks.build-release]
dependencies = ["update-rust-stable"]
toolchain = "stable"
install_crate = false
command = "cargo"
args = ["build", "--release", "${@}"]

[tasks.build-deb]
toolchain = "stable"
command = "cargo"
dependencies = ["update-rust-stable", "build-release"]
args = ["deb"]

[tasks.build-rpm]
toolchain = "stable"
command = "cargo"
dependencies = ["update-rust-stable", "build-release"]
args = ["generate-rpm"]

[tasks.clean]
dependencies = ["update-rust-stable"]
toolchain = "stable"
install_crate = false
command = "cargo"
args = ["clean"]

[tasks.coverage]
dependencies = ["update-rust-nightly"]
toolchain = "nightly${RUST_NIGHTLY_VERSION_PREFIX}"
command = "cargo"
condition = { platforms = ["linux"] }
env = { "RUSTFLAGS" = "-C link-dead-code" }
args = [
    "tarpaulin",
    "--ignore-tests",
    "--line",
    "--verbose",
    "--out", "Html",
    "--out", "Lcov",
    "--output-dir",
    "coverage",
    "${@}"
]

[tasks.docs]
dependencies = [
    "docs-nightly",
    "docs-stable"
]

[tasks.docs-stable]
dependencies = ["update-rust-stable"]
toolchain = "stable"
command = "cargo"
args = [
    "doc",
    "${@}"
]

[tasks.docs-nightly]
dependencies = ["update-rust-nightly"]
toolchain = "nightly${RUST_NIGHTLY_VERSION_PREFIX}"
ignore_errors = true
command = "cargo"
args = [
    "doc",
    "${@}"
]

[tasks.lint]
dependencies = [
    "lint-nightly",
    "lint-stable"
]

[tasks.lint-stable]
dependencies = ["update-rust-stable"]
toolchain = "stable"
command = "cargo"
args = [
    "clippy",
    "--all-targets",
    "${@}"
]

[tasks.lint-nightly]
dependencies = ["update-rust-nightly"]
toolchain = "nightly${RUST_NIGHTLY_VERSION_PREFIX}"
ignore_errors = true
command = "cargo"
args = [
    "clippy",
    "--all-targets",
    "${@}"
]

[tasks.format]
dependencies = ["update-rust-nightly"]
toolchain = "nightly${RUST_NIGHTLY_VERSION_PREFIX}"
command = "cargo"
args = [
    "fmt",
    "--all",
    "--",
    "--check",
    "${@}"
]

[tasks.format-apply]
dependencies = ["update-rust-nightly"]
toolchain = "nightly${RUST_NIGHTLY_VERSION_PREFIX}"
command = "cargo"
args = [
    "fmt",
    "--all",
    "--",
    "--emit", "files",
    "${@}"
]

[tasks.licenses]
dependencies = ["update-rust-nightly"]
toolchain = "nightly${RUST_NIGHTLY_VERSION_PREFIX}"
script = ['''
cargo +nightly about generate "docs/licenses.hbs" > "docs/licenses.html"
''']

[tasks.test]
dependencies = ["update-rust-stable"]
toolchain = "stable"
install_crate = false
command = "cargo"
args = ["test"]

[tasks.test-nightly]
dependencies = ["update-rust-nightly"]
toolchain = "nightly${RUST_NIGHTLY_VERSION_PREFIX}"
install_crate = false
command = "cargo"
args = ["test"]

[tasks.update-rust-stable]
command = "rustup"
args = ["update", "stable"]

[tasks.update-rust-nightly]
command = "rustup"
args = ["update", "nightly${RUST_NIGHTLY_VERSION_PREFIX}"]
