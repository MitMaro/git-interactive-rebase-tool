name: Pull Request

on: [pull_request]

jobs:
  linux:
    runs-on: [ ubuntu-latest ]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-make
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: test
      - name: Build Release
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: "build --release"
      - name: Run
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: "--release -- --version"
  lint:
    runs-on: [ ubuntu-latest ]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features
  docs:
    runs-on: [ ubuntu-latest ]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: default
          override: true
      - name: Run
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: "--all-features --workspace"
  format:
    runs-on: [ ubuntu-latest ]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: default
          override: true
      - name: Run
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: " --all -- --check"
  coverage:
    runs-on: [ ubuntu-latest ]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: "nightly"
          profile: minimal
          override: true
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          timeout: 10
          out-type: Lcov
          args: '--workspace --all-features --ignore-tests --line --output-dir coverage'
      - name: Post to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "coverage/lcov.info"
  macos:
    name: macos
    runs-on: [ macos-latest ]
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-make
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: test
      - name: Build Release
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: "build --release"
      - name: Run
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: "--release -- --version"
  windows:
    name: windows
    runs-on: [ windows-latest ]
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Run
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: '--cap-lints warn'
        with:
          command: run
          args: "--target x86_64-pc-windows-msvc --release -- --version"
      - name: Test
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: '--cap-lints warn'
        with:
          command: test
          args: "--target x86_64-pc-windows-msvc --release --workspace"
      - name: Build
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: '--cap-lints warn'
        with:
          command: build
          args: "--target x86_64-pc-windows-msvc --release"
      - name: Run
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: '--cap-lints warn'
        with:
          command: run
          args: "--target x86_64-pc-windows-msvc --release -- --version"
